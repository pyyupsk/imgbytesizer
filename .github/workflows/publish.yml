name: 🚀 Publish Release

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:
    inputs:
      version_tag:
        description: "Tag to use for the release (e.g., v0.1.0)"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: ⬇️ Checkout repository

      - uses: actions/setup-python@v5
        name: 📦 Setup Python
        with:
          python-version: "3.9"

      - name: 📦 Install Poetry
        uses: abatilo/actions-poetry@v4.0.0
        with:
          poetry-version: latest

      - name: 🔍 Install dependencies
        run: |
          export PATH="/root/.local/bin:$PATH"
          poetry install --with dev

      - name: 🔍 Check version is not already published on PyPI
        run: |
          export PATH="/root/.local/bin:$PATH"
          poetry run python scripts/check_version.py

  release-build:
    runs-on: ubuntu-latest
    needs:
      - check-version
    steps:
      - uses: actions/checkout@v4
        name: ⬇️ Checkout repository

      - uses: actions/setup-python@v5
        name: 📦 Setup Python
        with:
          python-version: "3.9"

      - name: 📦 Install Poetry
        uses: abatilo/actions-poetry@v4.0.0
        with:
          poetry-version: latest

      - name: 🔍 Install dependencies
        run: |
          export PATH="/root/.local/bin:$PATH"
          poetry install --with dev

      - name: 🏗 Build release
        run: |
          export PATH="/root/.local/bin:$PATH"
          poetry run tox -e build

      - uses: actions/upload-artifact@v4
        name: 📤 Upload artifact
        with:
          name: release
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/imgbytesizer
    steps:
      - uses: actions/download-artifact@v4
        name: 📥 Download artifact
        with:
          name: release
          path: dist/

      - uses: pypa/gh-action-pypi-publish@v1.12.4
        name: 🚀 Publish package
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  github-release:
    runs-on: ubuntu-latest
    needs:
      - pypi-publish
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        name: 📥 Download artifact
        with:
          name: release
          path: dist/

      - uses: sigstore/gh-action-sigstore-python@v3.0.0
        name: 🔑 Sign artifact
        with:
          inputs: dist/*

      - name: 🔧 Set TAG_NAME
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG_NAME=${{ github.event.inputs.version_tag }}" >> $GITHUB_ENV
          else
            echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          fi
      - name: 🛑 Fail if TAG_NAME is unset
        run: |
          if [[ -z "$TAG_NAME" ]]; then
            echo "TAG_NAME is not set!"
            exit 1
          fi

      - name: 🚀 Create or Update Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          if gh release view "$TAG_NAME" --repo "$GITHUB_REPOSITORY"; then
            gh release upload "$TAG_NAME" dist/* --repo "$GITHUB_REPOSITORY" --clobber
          else
            gh release create "$TAG_NAME" --repo "$GITHUB_REPOSITORY"
            gh release upload "$TAG_NAME" dist/* --repo "$GITHUB_REPOSITORY" --clobber
          fi
