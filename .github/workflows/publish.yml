name: 🚀 Publish Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_tag:
        description: "Tag to use for the release (e.g., v0.1.0)"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: ⬇️ Checkout repository
      - uses: actions/setup-python@v5
        name: 📦 Setup Python
        with:
          python-version: "3.9"
          cache: "pip" # caching pip dependencies
      - name: 🔍 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: 🏗 Build release
        run: python -m build
      - uses: actions/upload-artifact@v4
        name: 📤 Upload artifact
        with:
          name: release
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/imgbytesizer
    steps:
      - uses: actions/download-artifact@v4
        name: 📥 Download artifact
        with:
          name: release
          path: dist/
      - uses: pypa/gh-action-pypi-publish@v1.12.4
        name: 🚀 Publish package
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  github-release:
    runs-on: ubuntu-latest
    needs:
      - pypi-publish
    permissions:
      contents: write
      id-token: write
    env:
      TAG_NAME: ${{ github.ref_name != '' && github.ref_name || inputs.version_tag }}
    steps:
      - uses: actions/download-artifact@v4
        name: 📥 Download artifact
        with:
          name: release
          path: dist/
      - uses: sigstore/gh-action-sigstore-python@v3.0.0
        name: 🔑 Sign artifact
        with:
          inputs: dist/*
      - name: 🚀 Create Release
        run: gh release create "$TAG_NAME" --repo "$GITHUB_REPOSITORY"
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: 🚀 Upload Release Asset
        run: gh release upload "$TAG_NAME" dist/* --repo "$GITHUB_REPOSITORY"
        env:
          GITHUB_TOKEN: ${{ github.token }}
